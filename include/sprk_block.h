/*  =========================================================================
    sprk_block - Describes a block of data, where it originates on disk (descriptor)
and the transformations that are applied to it.

    Copyright (c) the Contributors as noted in the AUTHORS file.
    This file is part of CZMQ, the high-level C binding for 0MQ:
    http://czmq.zeromq.org.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.
    =========================================================================
*/

#ifndef SPRK_BLOCK_H_INCLUDED
#define SPRK_BLOCK_H_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif


//  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT!
//  @warning Please edit the model at "api/sprk_block.xml" to make changes.
//  @interface
//  Creates a new block
SPRK_EXPORT sprk_block_t *
    sprk_block_new (sprk_descriptor_t *descriptor, zlist_t *applied_transforms);

//  Destroy the sprk_block.
SPRK_EXPORT void
    sprk_block_destroy (sprk_block_t **self_p);

//  Queue a transformation to be applied to this block.
SPRK_EXPORT void
    sprk_block_queue_transform (sprk_block_t *self, sprk_transform_t *transform);

//  
SPRK_EXPORT sprk_descriptor_t *
    sprk_block_descriptor (sprk_block_t *self);

//  Self test of this class.
SPRK_EXPORT void
    sprk_block_test (bool verbose);
//  @end

#ifdef __cplusplus
}
#endif

#endif
