/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
*/

#include "QmlSprkBlock.h"


///
//  Queue a transformation to be applied to this block.
void QmlSprkBlock::queueTransform (QmlSprkTransform *transform) {
    sprk_block_queue_transform (self, transform->self);
};

///
//  
QmlSprkDescriptor *QmlSprkBlock::descriptor () {
    QmlSprkDescriptor *retQ_ = new QmlSprkDescriptor ();
    retQ_->self = sprk_block_descriptor (self);
    return retQ_;
};


QObject* QmlSprkBlock::qmlAttachedProperties(QObject* object) {
    return new QmlSprkBlockAttached(object);
}


///
//  Self test of this class.
void QmlSprkBlockAttached::test (bool verbose) {
    sprk_block_test (verbose);
};

///
//  Creates a new block
QmlSprkBlock *QmlSprkBlockAttached::construct (QmlSprkDescriptor *descriptor, zlist_t *appliedTransforms) {
    QmlSprkBlock *qmlSelf = new QmlSprkBlock ();
    qmlSelf->self = sprk_block_new (descriptor->self, appliedTransforms);
    return qmlSelf;
};

///
//  Destroy the sprk_block.
void QmlSprkBlockAttached::destruct (QmlSprkBlock *qmlSelf) {
    sprk_block_destroy (&qmlSelf->self);
};

/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
*/
