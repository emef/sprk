/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
*/

#ifndef QML_SPRK_CTX_H
#define QML_SPRK_CTX_H

#include <QtQml>

#include <sprk.h>
#include "qml_sprk_plugin.h"


class QmlSprkCtx : public QObject
{
    Q_OBJECT
    Q_PROPERTY(bool isNULL READ isNULL)
    
public:
    sprk_ctx_t *self;
    
    QmlSprkCtx() { self = NULL; }
    bool isNULL() { return self == NULL; }
    
    static QObject* qmlAttachedProperties(QObject* object); // defined in QmlSprkCtx.cpp
    
public slots:
    //  Assign a block to the executor pool.
    void assignBlock (QmlSprkBlock *block);

    //  Remove a block from the executor pool.
    void dropBlock (QmlSprkBlock *block);
};

class QmlSprkCtxAttached : public QObject
{
    Q_OBJECT
    QObject* m_attached;
    
public:
    QmlSprkCtxAttached (QObject* attached) {
        Q_UNUSED (attached);
    };
    
public slots:
    //  Self test of this class.
    void test (bool verbose);

    //  Creates a new sprk context which facilitates communication with
    //  known executors.                                               
    QmlSprkCtx *construct ();

    //  Destroy the sprk_ctx.
    void destruct (QmlSprkCtx *qmlSelf);
};


QML_DECLARE_TYPEINFO(QmlSprkCtx, QML_HAS_ATTACHED_PROPERTIES)

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
*/
