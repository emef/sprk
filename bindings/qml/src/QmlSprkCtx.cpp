/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
*/

#include "QmlSprkCtx.h"


///
//  Loads data located in given paths distributed across executors.
QmlSprkDataset *QmlSprkCtx::loadDense (const QString &pathList, uint32_t rowSize) {
    QmlSprkDataset *retQ_ = new QmlSprkDataset ();
    retQ_->self = sprk_ctx_load_dense (self, pathList.toUtf8().data(), rowSize);
    return retQ_;
};


QObject* QmlSprkCtx::qmlAttachedProperties(QObject* object) {
    return new QmlSprkCtxAttached(object);
}


///
//  Self test of this class.
void QmlSprkCtxAttached::test (bool verbose) {
    sprk_ctx_test (verbose);
};

///
//  Creates a new sprk context which facilitates communication with
//  known executors.                                               
QmlSprkCtx *QmlSprkCtxAttached::construct (const QString &brokerUri) {
    QmlSprkCtx *qmlSelf = new QmlSprkCtx ();
    qmlSelf->self = sprk_ctx_new (brokerUri.toUtf8().data());
    return qmlSelf;
};

///
//  Destroy the sprk_ctx.
void QmlSprkCtxAttached::destruct (QmlSprkCtx *qmlSelf) {
    sprk_ctx_destroy (&qmlSelf->self);
};

/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
*/
