################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################

require 'ffi'
require_relative 'ffi/version'

module Sprk
  module FFI
    module LibC
      extend ::FFI::Library
      ffi_lib ::FFI::Platform::LIBC
      attach_function :free, [ :pointer ], :void, blocking: true
    end

    extend ::FFI::Library

    def self.available?
      @available
    end

    begin
      lib_name = 'libsprk'
      lib_paths = ['/usr/local/lib', '/opt/local/lib', '/usr/lib64']
        .map { |path| "#{path}/#{lib_name}.#{::FFI::Platform::LIBSUFFIX}" }
      ffi_lib lib_paths + [lib_name]
      @available = true
    rescue LoadError
      warn ""
      warn "WARNING: ::Sprk::FFI is not available without libsprk."
      warn ""
      @available = false
    end

    if available?
      opts = {
        blocking: true  # only necessary on MRI to deal with the GIL.
      }

      attach_function :sprk_ctx_new, [], :pointer, **opts
      attach_function :sprk_ctx_destroy, [:pointer], :void, **opts
      attach_function :sprk_ctx_assign_block, [:pointer, :pointer], :string, **opts
      attach_function :sprk_ctx_drop_block, [:pointer, :pointer], :void, **opts
      attach_function :sprk_ctx_test, [:bool], :void, **opts

      require_relative 'ffi/ctx'

      attach_function :sprk_dataset_new, [:pointer, :string], :pointer, **opts
      attach_function :sprk_dataset_destroy, [:pointer], :void, **opts
      attach_function :sprk_dataset_checkpoint, [:pointer], :void, **opts
      attach_function :sprk_dataset_mul, [:pointer, :float], :void, **opts
      attach_function :sprk_dataset_sum, [:pointer], :float, **opts
      attach_function :sprk_dataset_test, [:bool], :void, **opts

      require_relative 'ffi/dataset'

      attach_function :sprk_block_new, [:pointer, :pointer], :pointer, **opts
      attach_function :sprk_block_destroy, [:pointer], :void, **opts
      attach_function :sprk_block_queue_transform, [:pointer, :pointer], :void, **opts
      attach_function :sprk_block_descriptor, [:pointer], :pointer, **opts
      attach_function :sprk_block_test, [:bool], :void, **opts

      require_relative 'ffi/block'

      attach_function :sprk_blockdata_new, [:pointer, :pointer, :uint32], :pointer, **opts
      attach_function :sprk_blockdata_destroy, [:pointer], :void, **opts
      attach_function :sprk_blockdata_queue_transform, [:pointer, :pointer], :void, **opts
      attach_function :sprk_blockdata_descriptor, [:pointer], :pointer, **opts
      attach_function :sprk_blockdata_test, [:bool], :void, **opts

      require_relative 'ffi/blockdata'

      attach_function :sprk_descriptor_new, [:string, :uint64, :uint64, :uint32], :pointer, **opts
      attach_function :sprk_descriptor_destroy, [:pointer], :void, **opts
      attach_function :sprk_descriptor_uri, [:pointer], :string, **opts
      attach_function :sprk_descriptor_offset, [:pointer], :uint64, **opts
      attach_function :sprk_descriptor_length, [:pointer], :uint64, **opts
      attach_function :sprk_descriptor_row_size, [:pointer], :uint32, **opts
      attach_function :sprk_descriptor_test, [:bool], :void, **opts

      require_relative 'ffi/descriptor'

      attach_function :sprk_transform_new, [], :pointer, **opts
      attach_function :sprk_transform_destroy, [:pointer], :void, **opts
      attach_function :sprk_transform_test, [:bool], :void, **opts

      require_relative 'ffi/transform'

      attach_function :sprk_block_manager_new, [], :pointer, **opts
      attach_function :sprk_block_manager_destroy, [:pointer], :void, **opts
      attach_function :sprk_block_manager_read_and_store_block, [:pointer, :string, :pointer], :pointer, **opts
      attach_function :sprk_block_manager_get_block, [:pointer, :string], :pointer, **opts
      attach_function :sprk_block_manager_test, [:bool], :void, **opts

      require_relative 'ffi/block_manager'
    end
  end
end

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
