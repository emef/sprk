################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
program_libs = src/libsprk.la ${project_libs}

# Programs need to link the c++ runtime if everything was compiled statically.
if !ENABLE_SHARED
program_libs += -lstdc++
endif

lib_LTLIBRARIES += src/libsprk.la
pkgconfig_DATA = src/libsprk.pc

include_HEADERS = \
    include/sprk.h \
    include/sprk_ctx.h \
    include/sprk_dataset.h \
    include/sprk_block.h \
    include/sprk_blockdata.h \
    include/sprk_descriptor.h \
    include/sprk_transform.h \
    include/sprk_block_manager.h \
    include/sprk_msg.h \
    include/sprk_library.h

src_libsprk_la_SOURCES = \
    src/sprk_ctx.c \
    src/sprk_dataset.c \
    src/sprk_block.c \
    src/sprk_blockdata.c \
    src/sprk_descriptor.c \
    src/sprk_transform.c \
    src/sprk_block_manager.c \
    src/sprk_msg.c \
    src/executor.c \
    src/blockworker.c \
    src/platform.h

src_libsprk_la_CPPFLAGS = ${AM_CPPFLAGS}

src_libsprk_la_LDFLAGS = \
    -version-info @LTVER@ \
    $(LIBTOOL_EXTRA_LDFLAGS)

if ON_MINGW
src_libsprk_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

if ON_CYGWIN
src_libsprk_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

src_libsprk_la_LIBADD = ${project_libs}

if WITH_INPROCESS
bin_PROGRAMS += src/inprocess
src_inprocess_CPPFLAGS = ${AM_CPPFLAGS}
src_inprocess_LDADD = ${program_libs}
src_inprocess_SOURCES = src/inprocess.c
if WITH_SYSTEMD
endif #WITH_SYSTEMD

endif #WITH_INPROCESS
if WITH_SPRK_SELFTEST
check_PROGRAMS += src/sprk_selftest
noinst_PROGRAMS += src/sprk_selftest
src_sprk_selftest_CPPFLAGS = ${AM_CPPFLAGS}
src_sprk_selftest_LDADD = ${program_libs}
src_sprk_selftest_SOURCES = src/sprk_selftest.c
if WITH_SYSTEMD
endif #WITH_SYSTEMD

endif #WITH_SPRK_SELFTEST

# Install api files into /usr/local/share/zproject
apidir = @datadir@/zproject/sprk
dist_api_DATA = \
    api/license.xml \
    api/sprk_ctx.xml \
    api/license.xml \
    api/sprk_dataset.xml \
    api/license.xml \
    api/sprk_block.xml \
    api/license.xml \
    api/sprk_blockdata.xml \
    api/license.xml \
    api/sprk_descriptor.xml \
    api/license.xml \
    api/sprk_transform.xml \
    api/sprk_block_manager.xml

# define custom target for all products of /src
src:
	src/inprocess \
	src/sprk_selftest \
	src/libsprk.la

# Produce generated code from models in the src directory
code:
	cd $(srcdir)/src; gsl -q sprk_msg.xml

check-local: src/sprk_selftest
	$(LIBTOOL) --mode=execute $(srcdir)/src/sprk_selftest

check-verbose: src/sprk_selftest
	$(LIBTOOL) --mode=execute $(srcdir)/src/sprk_selftest -v

# Run the selftest binary under valgrind to check for memory leaks
memcheck: src/sprk_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=memcheck \
		--leak-check=full --show-reachable=yes --error-exitcode=1 \
		--suppressions=$(srcdir)/src/.valgrind.supp \
		$(srcdir)/src/sprk_selftest

# Run the selftest binary under valgrind to check for performance leaks
callcheck: src/sprk_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=callgrind \
		$(srcdir)/src/sprk_selftest

# Run the selftest binary under gdb for debugging
debug: src/sprk_selftest
	$(LIBTOOL) --mode=execute gdb -q \
		$(srcdir)/src/sprk_selftest

# Run the selftest binary with verbose switch for tracing
animate: src/sprk_selftest
	$(LIBTOOL) --mode=execute $(srcdir)/src/sprk_selftest -v

if WITH_GCOV
coverage: src/sprk_selftest
	@echo "called configure --with-gcov"
	lcov --base-directory . --directory . --zerocounters -q
	$(MAKE) check
	lcov --base-directory . --directory . --capture -o coverage.info
	lcov --remove coverage.info "/usr*" -o coverage.info
	lcov --remove coverage.info "sprk_selftest.c" -o coverage.info
	$(RM) -rf coverage/*
	genhtml -o coverage/ -t "sprk test coverage" --num-spaces 4 coverage.info
else
coverage: src/sprk_selftest
	@echo "call make clean && configure --with-gcov to enable code coverage"
	@exit 1
endif

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
